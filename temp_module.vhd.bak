library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity temp_module is
port(
	switches: in std_logic_vector(7 downto 0);
	neg_flag: out std_logic;
	alarm_flag: out std_logic;
	temp_value: out integer range -40 to 120
);
end temp_module;

architecture main of temp_module is
begin
	--signal temp : integer;
	--signal converted_val : integer;

	process(switches)
	variable temp : integer;
	variable converted_val : integer;
	begin
		-- Converte input_val de std_logic_vector para inteiro
		temp := to_integer(unsigned(switches));

		-- Aplicando a fórmula para converter o valor de entrada para o range -40 a 80
		converted_val := (temp * 120) / 255 - 40;

		-- Checa condição de alarme
		if (converted_val < 0) or (converted_val > 30) then
			alarm_flag <= '1';
		else
			alarm_flag <= '0';
		end if;

		-- Verifica se o valor é negativo
		if converted_val < 0 then
			neg_flag <= '1';                  -- Sinaliza que é negativo
			temp_value <= abs(converted_val); -- Converte para positivo
		else
			neg_flag <= '0';                  -- Sinaliza que é positivo
			temp_value <= converted_val;      -- Mantém o valor positivo
		end if;
	end process;

end main;